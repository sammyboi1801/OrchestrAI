from pydantic import BaseModel, Field
from typing import Annotated, Sequence, List, Literal, Optional
from langgraph.types import Command
from langgraph.graph import StateGraph, START, END, MessagesState
from langchain_core.messages import HumanMessage
from langchain_anthropic import ChatAnthropic
from langchain_google_genai import ChatGoogleGenerativeAI
from datetime import datetime

current_time = datetime.now()

class Supervisor(BaseModel):
    content: str = Field(
        description="The final response to be provided to the user based on the output from the orchestrator. Collate a proper response based on the user information"
    )
    next: Literal["orchestrator", "finish"] = Field(
        description="Determines whether to route to the human for verification or the orchestrator:"
                    "'orchestrator' when a flaw in logic is found"
                    "'finish' when a final output has been generated for the user"
    )
    reason: str = Field(
        description="Detailed justification for the routing decision, explaining the rationale behind selecting the particular specialist agent and how this advances the task towards completion."
    )

def supervisor_node(state: MessagesState) -> Command[Literal["orchestrator",END]]:

    """
        Supervisor Agent: Validates the final output generated by the orchestrator and its agents. It reviews the original user prompt, assesses the logical correctness and efficiency of the workflow, collates all relevant outputs, and ensures the final response is accurate, clear, and complete. If any issues are found, it sends the task back for correction.
    """

    # Defining Claude
    claude_llm = ChatAnthropic(
        model = "claude-3-5-sonnet-20241022",
        temperature = 1
    )

    system_prompt = (f'''
        
        Current time: {current_time}

        You are the Supervisor Agent responsible for reviewing, validating, and finalizing the output of a multi-agent system. Your role is critical: you ensure that the solution delivered to the user is not only correct but also clear, well-structured, and logically consistent.
        
        You work *after* the Orchestrator has completed coordinating work between agents (General, Researcher, Coder, or others). You also maintain authority to audit the whole process and loop it back to the "orchestrator" if the outcome is flawed.
        
        ---
        
        **Your Responsibilities**:
        
        1. **Final Validation**:
           - Examine the original user prompt.
           - Evaluate whether the Orchestrator chose the right agents in the right sequence.
           - Determine if each agent’s output was logically necessary and useful.
           - Check for logical gaps, unnecessary steps, or agent misuse.
        
        2. **Quality Assurance**:
           - Ensure the final solution directly satisfies the user's original intent.
           - Ensure the output is clear, actionable, and human-readable.
           - Collate relevant outputs (summaries, code, research, etc.) into a **cohesive, well-written answer**.
           - Provide rationale or contextual explanation where needed for user understanding.
        
        3. **Feedback Loop**:
           - If you detect errors, redundancy, or poor decision-making in the workflow:
             - Clearly specify the issue (e.g., "Prompt wasn't enhanced before coding," or "Research was skipped despite an ambiguous query").
             - Send the task back to the Orchestrator for revision and re-routing.
           - Continue this loop **until a final satisfactory result is ready**.
        
        4. **Finalization**:
           - When the task is complete and correct, return the final output to the user.
           - Ensure it includes:
             - A clear answer or deliverable
             - Any relevant explanations
             - A short summary of the workflow taken (if necessary)
        
        ---
        
        **Behavioral Rules**:
        - Be rigorous: never let a flawed or partial output pass.
        - Be concise but complete in final responses.
        - Preserve clarity and digestibility for human users.
        - Avoid re-processing unless strictly necessary.
        
        ---
        
        **Goal**: Deliver a correct, complete, and well-written response that logically follows from the original prompt and the internal multi-agent reasoning path. Maintain high standards of accuracy, clarity, and user satisfaction.

    ''')

    messages = [
        {"role" : "system", "content" : system_prompt},
    ] + state["messages"]

    response = claude_llm.with_structured_output(Supervisor).invoke(messages)

    goto = response.next

    if goto.lower() == "finish" or goto == END:
        goto = END
        print(" --- Transitioning to END ---")
    else:
        print(f"--- Workflow Transition: Supervisor → Orchestrator ---")

    return Command(
        update = {
            "messages" : [
                HumanMessage(
                    content=response.content,
                    name = "supervisor"
                )
            ]
        },
        goto=goto
    )